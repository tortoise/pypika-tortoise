[project]
name = "pypika-tortoise"
version = "0.6.1"
description = "Forked from pypika and streamline just for tortoise-orm"
authors = [{name="long2ice", email="long2ice@gmail.com"}]
license = {text="Apache-2.0"}
readme = "README.md"
keywords = ["postgresql", "Tortoise-ORM", "mysql", "sqlite", "sql"]
include = ["CHANGELOG.md", "LICENSE", "README.md"]
requires-python = ">=3.9"

[project.urls]
homepage = "https://github.com/tortoise/pypika-tortoise"
repository = "https://github.com/tortoise/pypika-tortoise.git"
documentation = "https://github.com/tortoise/pypika-tortoise"

[tool.poetry]
packages = [
    { include = "pypika_tortoise" }
]

[tool.poetry.group.dev.dependencies]
ruff = "*"
mypy = "*"
isort = "*"
black = "*"
pytest = "*"
bandit = "*"
pytest-xdist = "*"
pytest-cov = "*"
twine = "*"
typing-extensions = {version = "*", python = "<3.11"}

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']

[tool.mypy]
pretty = true
python_version = "3.9"
warn_unused_ignores = true

[tool.ruff]
line-length = 100

[tool.ruff.lint]
extend-select = [
    "FA",     # https://docs.astral.sh/ruff/rules/#flake8-future-annotations-fa
    "UP",     # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "RUF100", # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
]
ignore = ["UP031", "UP032"] # https://docs.astral.sh/ruff/rules/printf-string-formatting/

[tool.ruff.lint.per-file-ignores]
'pypika_tortoise/__init__.py' = ['F401']
'pypika_tortoise/dialects/__init__.py' = ['F401']
'tests/test_functions.py' = ['UP034']
'tests/dialects/test_postgresql.py' = ['RUF100']

[tool.bandit]
exclude_dirs = ["tests", "conftest.py"]

[tool.coverage.report]
show_missing = true
exclude_also = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    'if __name == "__main__":',
]
